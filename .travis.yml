language: cpp
notifications:
  email: false
branches:
  only:
    - master
dist: trusty

matrix:
  fast_finish: true
  include:
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.9
      env: COMPILER=gcc GCC=4.9
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-3.9
          packages:
            - clang-3.9
            - libstdc++-6-dev  # need newer libstdc++ for C++14 support
      env: COMPILER=clang CLANG=3.9
    - os: osx
      osx_image: xcode8
      compiler: clang

env:
  global:
    - MINICONDA_VERSION="latest"
    - MINICONDA_LINUX="Linux-x86_64"
    - MINICONDA_OSX="MacOSX-x86_64"

before_install:
  # Configure build variables
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      if [[ "$COMPILER" == "gcc" ]]; then
        export CXX=g++-$GCC CC=gcc-$GCC;
      fi
      if [[ "$COMPILER" == "clang" ]]; then
        export CXX=clang++-$CLANG CC=clang-$CLANG;
      fi
    elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      export CXX=clang++ CC=clang;
    fi

install:
  # Install miniconda / update conda
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      MINICONDA_OS=$MINICONDA_LINUX;
    elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      MINICONDA_OS=$MINICONDA_OSX;
    fi
  - wget "http://repo.continuum.io/miniconda/Miniconda3-$MINICONDA_VERSION-$MINICONDA_OS.sh" -O miniconda.sh;
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda install gtest cmake xtensor -c conda-forge
  # Testing
  - mkdir build
  - cd build
  - cmake -DBUILD_TESTS=ON ..
  - make -j2 test_fastscapelib
  - cd test

script:
  - ./test_fastscapelib
