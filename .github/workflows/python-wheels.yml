on:
  # trigger action from GitHub GUI (testing, no publish)
  workflow_dispatch:
  release:
    types:
      - published
  pull_request:  # also build on PRs touching any file below
    paths:
      - ".github/workflows/python-wheels.yml"
      - "pyproject.toml"
      - "CMakeLists.txt"
      - "python/CMakeLists.txt"

name: Python wheels

jobs:
  make_sdist:
    name: Make Python SDist
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Build SDist
        run: pipx run build --sdist

      - name: Upload SDist
        uses: actions/upload-artifact@v4
        with:
          name: release-sdist
          path: ./dist/*.tar.gz
          retention-days: 30

  build_wheels:
    name: Build wheel (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: ubuntu-latest
          arch: x86_64
        - os: windows-2022
          arch: AMD64
          msvc_arch: x64
        - os: macos-13
          arch: x86_64
          cmake_osx_architectures: x86_64
          macosx_deployment_target: 10.13
        - os: macos-14
          arch: arm64
          cmake_osx_architectures: arm64
          macosx_deployment_target: 14.0
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Build wheels
        uses: pypa/cibuildwheel@v3.0
        env:
          # skip PyPy and muslinux (for now)
          CIBW_SKIP: "pp* *musllinux*"
          CIBW_ARCHS: ${{ matrix.arch }}
          # need also to redefine here some environment vars defined in pyprojet.toml
          CIBW_ENVIRONMENT_MACOS:
            MACOSX_DEPLOYMENT_TARGET=${{ matrix.macosx_deployment_target }}
            CMAKE_OSX_ARCHITECTURES='${{ matrix.cmake_osx_architectures }}'
            SKBUILD_CMAKE_ARGS='-DFS_DOWNLOAD_XTENSOR_PYTHON=ON;-DFS_WITH_HEALPIX=OFF'

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: release-${{ matrix.os }}-${{ matrix.arch }}
          path: ./wheelhouse/*.whl
          retention-days: 5

  upload_all:
    needs: [build_wheels, make_sdist]
    environment: pypi
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - name: Get dist files
        uses: actions/download-artifact@v4
        with:
          pattern: release-*
          merge-multiple: true
          path: dist

      - name: Publish on PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
